// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostIt-app should render correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <NavBar />
    <div
      className="container"
    >
      <div
        className="row home"
      >
        <div
          className="col-md-6"
        >
          <h4>
            PostIt
            <small>
              <i>
                App
              </i>
            </small>
              allows friends to come together and share vital informtion.
          </h4>
        </div>
        <SignUp />
      </div>
    </div>
  </div>,
  "nodes": Array [
    <div>
      <NavBar />
      <div
        className="container"
      >
        <div
          className="row home"
        >
          <div
            className="col-md-6"
          >
            <h4>
              PostIt
              <small>
                <i>
                  App
                </i>
              </small>
                allows friends to come together and share vital informtion.
            </h4>
          </div>
          <SignUp />
        </div>
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <App />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": App {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <NavBar />
          <div
            className="container"
          >
            <div
              className="row home"
            >
              <div
                className="col-md-6"
              >
                <h4>
                  PostIt
                  <small>
                    <i>
                      App
                    </i>
                  </small>
                    allows friends to come together and share vital informtion.
                </h4>
              </div>
              <SignUp />
            </div>
          </div>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <NavBar />
          <div
            className="container"
          >
            <div
              className="row home"
            >
              <div
                className="col-md-6"
              >
                <h4>
                  PostIt
                  <small>
                    <i>
                      App
                    </i>
                  </small>
                    allows friends to come together and share vital informtion.
                </h4>
              </div>
              <SignUp />
            </div>
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App />,
}
`;

exports[`PostIt-app should render correctly 2`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <div
      className="col-md-5 col-md-offset-1"
    >
      <div
        className="row"
      >
        <div
          className="col-md-12 w3-card w3-white"
          id="signupform"
        >
          <h4>
            Create an account
          </h4>
          <br />
          <form
            onSubmit={[Function]}
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="email"
              >
                Email
              </label>
              <input
                className="signinform inp"
                id="email"
                name="email"
                onChange={[Function]}
                placeholder="johndoe@example.com"
                required={true}
                type="email"
                value=""
              />
            </div>
            <div
              className="form-group"
            >
              <label
                htmlFor="username"
              >
                Username
              </label>
              <input
                className="signinform"
                id="username"
                name="username"
                onChange={[Function]}
                placeholder="johndoe"
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="form-group"
            >
              <label
                htmlFor="password"
              >
                Password
              </label>
              <input
                className="signinform"
                id="pass"
                name="password"
                onChange={[Function]}
                placeholder="********"
                required={true}
                type="password"
                value=""
              />
            </div>
            <div
              className="form-group"
            >
              <label
                htmlFor="conf_password"
              >
                Confirm Password
              </label>
              <input
                className="signinform"
                id="conf_password"
                name="conf_password"
                onChange={[Function]}
                placeholder="********"
                required={true}
                type="password"
                value=""
              />
            </div>
            <button
              className="signinformbtn"
              type="submit"
            >
              Sign up
            </button>
          </form>
          <br />
          <p
            className="text-center"
          >
            By clicking "Sign up for Postit App", you agree to our terms of service and privacy policy.
          </p>
        </div>
      </div>
    </div>
  </div>,
  "nodes": Array [
    <div>
      <div
        className="col-md-5 col-md-offset-1"
      >
        <div
          className="row"
        >
          <div
            className="col-md-12 w3-card w3-white"
            id="signupform"
          >
            <h4>
              Create an account
            </h4>
            <br />
            <form
              onSubmit={[Function]}
            >
              <div
                className="form-group"
              >
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <input
                  className="signinform inp"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  placeholder="johndoe@example.com"
                  required={true}
                  type="email"
                  value=""
                />
              </div>
              <div
                className="form-group"
              >
                <label
                  htmlFor="username"
                >
                  Username
                </label>
                <input
                  className="signinform"
                  id="username"
                  name="username"
                  onChange={[Function]}
                  placeholder="johndoe"
                  required={true}
                  type="text"
                  value=""
                />
              </div>
              <div
                className="form-group"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  className="signinform"
                  id="pass"
                  name="password"
                  onChange={[Function]}
                  placeholder="********"
                  required={true}
                  type="password"
                  value=""
                />
              </div>
              <div
                className="form-group"
              >
                <label
                  htmlFor="conf_password"
                >
                  Confirm Password
                </label>
                <input
                  className="signinform"
                  id="conf_password"
                  name="conf_password"
                  onChange={[Function]}
                  placeholder="********"
                  required={true}
                  type="password"
                  value=""
                />
              </div>
              <button
                className="signinformbtn"
                type="submit"
              >
                Sign up
              </button>
            </form>
            <br />
            <p
              className="text-center"
            >
              By clicking "Sign up for Postit App", you agree to our terms of service and privacy policy.
            </p>
          </div>
        </div>
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <SignUp />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": SignUp {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "onChange": [Function],
        "onSubmit": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "conf_password": "",
          "email": "",
          "errMessage": "",
          "password": "",
          "signupMessage": "",
          "username": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <div
            className="col-md-5 col-md-offset-1"
          >
            <div
              className="row"
            >
              <div
                className="col-md-12 w3-card w3-white"
                id="signupform"
              >
                <h4>
                  Create an account
                </h4>
                <br />
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="email"
                    >
                      Email
                    </label>
                    <input
                      className="signinform inp"
                      id="email"
                      name="email"
                      onChange={[Function]}
                      placeholder="johndoe@example.com"
                      required={true}
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="username"
                    >
                      Username
                    </label>
                    <input
                      className="signinform"
                      id="username"
                      name="username"
                      onChange={[Function]}
                      placeholder="johndoe"
                      required={true}
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="password"
                    >
                      Password
                    </label>
                    <input
                      className="signinform"
                      id="pass"
                      name="password"
                      onChange={[Function]}
                      placeholder="********"
                      required={true}
                      type="password"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="conf_password"
                    >
                      Confirm Password
                    </label>
                    <input
                      className="signinform"
                      id="conf_password"
                      name="conf_password"
                      onChange={[Function]}
                      placeholder="********"
                      required={true}
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    className="signinformbtn"
                    type="submit"
                  >
                    Sign up
                  </button>
                </form>
                <br />
                <p
                  className="text-center"
                >
                  By clicking "Sign up for Postit App", you agree to our terms of service and privacy policy.
                </p>
              </div>
            </div>
          </div>
        </div>,
        "_debugID": 4,
        "_renderedOutput": <div>
          <div
            className="col-md-5 col-md-offset-1"
          >
            <div
              className="row"
            >
              <div
                className="col-md-12 w3-card w3-white"
                id="signupform"
              >
                <h4>
                  Create an account
                </h4>
                <br />
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="email"
                    >
                      Email
                    </label>
                    <input
                      className="signinform inp"
                      id="email"
                      name="email"
                      onChange={[Function]}
                      placeholder="johndoe@example.com"
                      required={true}
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="username"
                    >
                      Username
                    </label>
                    <input
                      className="signinform"
                      id="username"
                      name="username"
                      onChange={[Function]}
                      placeholder="johndoe"
                      required={true}
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="password"
                    >
                      Password
                    </label>
                    <input
                      className="signinform"
                      id="pass"
                      name="password"
                      onChange={[Function]}
                      placeholder="********"
                      required={true}
                      type="password"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="conf_password"
                    >
                      Confirm Password
                    </label>
                    <input
                      className="signinform"
                      id="conf_password"
                      name="conf_password"
                      onChange={[Function]}
                      placeholder="********"
                      required={true}
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    className="signinformbtn"
                    type="submit"
                  >
                    Sign up
                  </button>
                </form>
                <br />
                <p
                  className="text-center"
                >
                  By clicking "Sign up for Postit App", you agree to our terms of service and privacy policy.
                </p>
              </div>
            </div>
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SignUp />,
}
`;
